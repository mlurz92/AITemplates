# Anwendungsbeschreibung: Prompt-Template Browser (Detailanalyse)

## 1. Zweck und Kernidee

**Zweck:** Die Anwendung dient als **hochspezialisierter, interaktiver Browser und Viewer für eine Sammlung von Textbausteinen (Prompts)**, die hierarchisch in einer lokalen XML-Datei (`Templates.xml`) strukturiert sind. Der primäre Anwendungsfall ist das schnelle Finden, Anzeigen und Kopieren vordefinierter Textvorlagen, vermutlich zur Verwendung in anderen Anwendungen oder Kontexten (z.B. für KI-Prompts). Sie fungiert als persönliche, lokal laufende Wissens- und Vorlagenbasis.

**Kernidee:** Bereitstellung einer **visuell ansprechenden, intuitiven Oberfläche** zur Navigation durch eine potenziell komplexe Ordnerstruktur von Text-Snippets. Der Fokus liegt auf **Effizienz und Zugänglichkeit**, sowohl auf Desktop- als auch auf mobilen Geräten, mit direktem Zugriff auf die benötigten Textinhalte über eine Kartenansicht und eine schnelle Kopierfunktion.

## 2. User Interface (UI) - Extrem detailliert

* **Gesamteindruck & Thema:**
    * **Dunkles Milchglas-Design:** Dominierend ist ein dunkles Grundthema (`--bg-base: #000`, `--bg-dark: rgba(20, 20, 20, 0.95)`), kombiniert mit halbtransparenten "Milchglas"-Elementen für Container und Leisten (`--bg-glass: rgba(30, 30, 30, 0.7)`, `backdrop-filter: blur(...)`). Dies erzeugt einen modernen, schwebenden Effekt, bei dem der Hintergrund leicht durchscheint.
    * **Farbpalette:** Primär Schwarz-/Grautöne mit hellem Text (`--text-color: #e0e0e0`) für guten Kontrast und einer **Akzentfarbe** in einem warmen Gelb/Orange (`--accent: #ffce7a`), die subtil bei Hover-Effekten eingesetzt wird.
    * **Typografie:** Standard-Sans-Serif-Schriftart (`font-family: sans-serif`) für gute Lesbarkeit.

* **Hauptkomponenten:**
    * **Top-Bar (`#top-bar`):**
        * **Positionierung:** Permanent am oberen Bildschirmrand fixiert (`position: fixed`, `top: 0`), überlagert den restlichen Inhalt (`z-index: 999`).
        * **Aussehen:** Dunkler, leicht transparenter Hintergrund mit Milchglas-Effekt (`backdrop-filter: blur(10px)`) und einer feinen unteren Trennlinie (`border-bottom: 1px solid rgba(255,255,255,0.1)`).
        * **Inhalt (von links nach rechts):**
            1.  **Zurück-Button (`#topbar-back`):** Enthält ein SVG-Icon (Pfeil nach links, `v-arrow-left`). Das Icon ist strichbasiert (keine Füllung), weiß/hellgrau (`stroke: var(--text-color)`), und animiert sich beim Hovern durch einen "Zeichnen"-Effekt. Der Button selbst ist rahmenlos und transparent, mit einem leichten Hintergrund-Highlight beim Hovern (`background: var(--hover-bg)`).
            2.  **Breadcrumb-Navigation (`#breadcrumb`):** Zeigt den Pfad von "Home" bis zum aktuell angezeigten Ordner an. Klickbare Elemente sind als Links (`.breadcrumb-link`) mit leicht abgerundeten Ecken und Hover-Effekt (Hintergrundfarbe, Akzent-Textfarbe) gestaltet. Der aktuelle Ordner ist nicht klickbar. Bei Platzmangel wird der Text mit Ellipsen (...) abgeschnitten (`text-overflow: ellipsis`). Die Darstellung ist zentriert innerhalb des verfügbaren Platzes in der Top-Bar.
        * **Animation:** Die Leiste gleitet beim Laden der Seite von oben ins Bild (`@keyframes slideDown`). Beim Hovern über die Leiste ändert sich der Hintergrund zu einem leichten Farbverlauf und ein Schatten erscheint (`box-shadow: 0 4px 10px rgba(0, 0, 0, 0.7)`).
    * **Karten-Container (`.cards-container`):**
        * **Layout:** Nimmt den Hauptbereich unterhalb der Top-Bar ein. Nutzt ein **responsives CSS-Grid**, das die Karten automatisch anordnet und die Anzahl der Spalten an die Bildschirmbreite anpasst (`grid-template-columns: repeat(auto-fit, minmax(250px, 1fr))`). Der Abstand zwischen den Karten ist definiert (`gap: 1.5rem`). Am unteren Rand ist zusätzlicher Platz (`padding-bottom: 80px`), um Überlappung mit der mobilen Navigationsleiste zu vermeiden.
        * **Karten (`.card`):**
            * **Aussehen:** Rechteckige Karten mit festem Seitenverhältnis (`aspect-ratio: 4 / 3`), abgerundeten Ecken (`border-radius: 8px`), leichtem Rand und Milchglas-Hintergrund (`background: var(--bg-glass)`) mit Unschärfeeffekt (`backdrop-filter: blur(6px)`). Ein Schatten (`box-shadow`) sorgt für eine schwebende Optik.
            * **Inhalt (Prompt-Karte):** Zeigt oben zentriert den **Titel** (`h3`) an (lange Titel werden mit "..." gekürzt). Darunter folgt eine **Vorschau des Prompt-Textes** (`p`), ebenfalls auf ca. 100 Zeichen gekürzt. Am unteren Rand befinden sich **zwei Buttons** nebeneinander (`.card-buttons`): "Erweitern" (Icon: Pfeil nach unten, `v-mehranzeigen`) und "Kopieren" (Icon: stilisiertes Dokument, `v-copy`).
            * **Inhalt (Ordner-Karte):** Zentriert vertikal und horizontal (`justify-content: center`, `align-items: center`). Zeigt den **Titel** (`h3`) und darunter ein großes, animiertes **Ordner-Icon** (`v-folder2`). Keine Beschreibung oder Kopieren-Button.
            * **Hover-Effekt:** Die Karte hebt sich leicht an (`transform: translateY(-5px)`), der Schatten wird stärker, und eine **pulsierende Leuchtanimation** (`@keyframes glow`) um die Karte wird aktiviert, die die Akzentfarbe subtil nutzt. Die Icons auf den Karten animieren ebenfalls (siehe unten).
    * **Modal (`#prompt-modal`):**
        * **Aussehen:** Ein bildschirmfüllendes Overlay mit stark abgedunkeltem, unscharfem Hintergrund (`background: rgba(0, 0, 0, 0.7)`, `backdrop-filter: blur(5px)`). Der eigentliche Inhalts-Container (`.modal-content`) schwebt zentriert darüber, ebenfalls mit Milchglas-Effekt (`background: rgba(30, 30, 30, 0.85)`, `backdrop-filter: blur(8px)`), abgerundeten Ecken und ausreichend Innenabstand (`padding: 2rem`). Ist für vertikales Scrollen bei langen Texten ausgelegt, wobei die Scrollbar visuell versteckt ist.
        * **Inhalt:** Zeigt den **vollständigen, unbeschnittenen Prompt-Text** (`#prompt-fulltext`) an. Unten rechts befinden sich zwei Buttons: "Schließen" (Icon: Pfeil nach oben/Minimieren, `v-minimize`) und "Kopieren" (Icon: `v-copy`).
        * **Animation:** Das Modal selbst blendet sanft ein/aus (`opacity`). Der Inhalt skaliert und blendet gleichzeitig ein/aus (`transform: scale(...)`, `opacity`) für einen Zoom-Effekt.
    * **Mobile Navigationsleiste (`#mobile-nav`):**
        * **Positionierung:** Nur auf mobilen Geräten sichtbar, am unteren Bildschirmrand fixiert (`position: fixed`, `bottom: 0`), überlagert den Inhalt (`z-index: 1050`).
        * **Aussehen:** Ähnlich der Top-Bar: dunkler Milchglas-Hintergrund (`background: var(--bg-dark)`, `backdrop-filter: blur(10px)`).
        * **Inhalt:** Enthält zwei zentrierte Buttons nebeneinander: "Home" (Haus-Icon) und "Zurück" (Pfeil-links-Icon). Icons sind einfache, nicht-animierte SVGs.
    * **Fixierter Zurück-Button (`#fixed-back`):**
        * **Positionierung:** Am linken Bildschirmrand, vertikal mittig fixiert (`position: fixed`, `left: 0`, `top: 50%`, `transform: translateY(-50%)`), überlagert alles (`z-index: 1100`).
        * **Aussehen:** Rahmenloser, transparenter Button mit einem Pfeil-links-Icon (nicht animiert). Vergrößert sich leicht beim Hovern (`transform: scale(1.1)`).
        * **Sichtbarkeit:** Nur sichtbar, wenn man sich nicht auf der obersten Ebene ("Home") befindet.
    * **SVG Icons:**
        * **Stil:** Alle interaktiven Icons (außer Mobile Nav) sind als Linienzeichnungen (`fill: none`, `stroke: var(--text-color)`, `stroke-width: 2`) mit abgerundeten Linienenden und -ecken (`stroke-linecap: round`, `stroke-linejoin: round`) gestaltet.
        * **Animation:** Beim Überfahren des zugehörigen Buttons wird eine **"Zeichnen"-Animation** ausgelöst (`stroke-dasharray`, `stroke-dashoffset`, `@keyframes`). Die statische Version des Icons blendet aus (`opacity: 0`), die animierte Version blendet ein (`opacity: 1`) und zeichnet sich über ca. 1,5 Sekunden.

## 3. User Experience (UX) & Funktionalität - Extrem detailliert

* **Start & Initialisierung:**
    * Beim Laden der Seite (`DOMContentLoaded`) wird die Anwendung initialisiert (`initApp`).
    * Die Top-Bar gleitet animiert von oben ins Bild.
    * Die XML-Datei `Templates.xml` wird automatisch via `Workspace` geladen und geparst.
    * Die oberste Ebene der Hierarchie wird im Karten-Container gerendert (`renderView`).
    * Die Breadcrumb-Navigation zeigt initial nur "Home" an.
    * Auf mobilen Geräten wird zusätzlich die untere Navigationsleiste eingeblendet und die Wischgesten-Erkennung aktiviert.
* **Navigation:**
    * **Ordner öffnen:** Ein Klick (oder Tap) auf eine **Ordner-Karte** löst die Navigation aus:
        1.  Der aktuelle Knoten wird auf den `pathStack` gelegt.
        2.  Der geklickte Ordner wird zum `currentNode`.
        3.  Die Ansicht wird mit dem Inhalt des neuen Ordners neu gerendert (`renderView`), begleitet von einem Fade-Out/Fade-In-Effekt der Karten.
        4.  Die Breadcrumb-Leiste wird aktualisiert, um den neuen Pfad anzuzeigen.
        5.  Der `fixed-back`-Button (falls vorher versteckt) wird sichtbar.
    * **Zurück navigieren:**
        1.  **Top-Bar Button (`#topbar-back`):** Klick navigiert eine Ebene zurück (wenn kein Modal offen ist).
        2.  **Mobile Nav Button (`#mobile-back`):** Klick navigiert eine Ebene zurück.
        3.  **Wischgeste (Mobile):** Ein Wischen von links nach rechts über den Karten-Container navigiert eine Ebene zurück.
        4.  **Browser-Zurück-Button (Mobile):** Löst ebenfalls die Zurück-Navigation innerhalb der App aus.
        5.  **Breadcrumb-Links:** Klick auf einen übergeordneten Ordnernamen im Breadcrumb navigiert direkt zu dieser Ebene zurück, wobei der `pathStack` entsprechend gekürzt wird.
        * **Ablauf:** Der letzte Knoten wird vom `pathStack` entfernt, wird zum `currentNode`, die Ansicht wird neu gerendert, und die Breadcrumb aktualisiert. Wenn man zur "Home"-Ebene zurückkehrt, wird der `fixed-back`-Button wieder versteckt.
    * **Home navigieren:**
        1.  **Breadcrumb "Home"-Link:** Klick navigiert zur obersten Ebene.
        2.  **Mobile Nav Button (`#mobile-home`):** Klick navigiert zur obersten Ebene.
        3.  **Fixed Back Button (`#fixed-back`):** Klick navigiert zur obersten Ebene.
        * **Ablauf:** `currentNode` wird auf das Wurzelelement gesetzt, `pathStack` wird geleert, Ansicht neu gerendert, Breadcrumb zeigt nur "Home", `fixed-back`-Button wird versteckt.
* **Prompt Interaktion:**
    * **Vorschau:** Prompt-Karten zeigen Titel und eine gekürzte Beschreibung.
    * **Vollansicht (Modal öffnen):**
        1.  Ein Klick (oder Tap) auf eine **Prompt-Karte** oder deren **"Erweitern"-Button** öffnet das Modal (`openModal`).
        2.  Das Modal erscheint mit einer sanften Einblend- und Skalierungsanimation.
        3.  Der **vollständige Text** des ausgewählten Prompts wird im Modal angezeigt.
    * **Modal schließen:**
        1.  Klick auf den **Schließen-Button (`#modal-close`)** im Modal.
        2.  Klick (oder Tap) auf den **abgedunkelten Hintergrund** außerhalb des Modal-Inhalts.
        3.  Klick auf den **Zurück-Button in der Top-Bar (`#topbar-back`)**, wenn das Modal offen ist.
        * **Ablauf:** Das Modal verschwindet mit einer umgekehrten Ausblend-/Skalierungsanimation.
    * **Prompt kopieren:**
        1.  Klick auf den **Kopieren-Button auf der Prompt-Karte:** Kopiert den *vollständigen* Prompt-Text direkt in die Zwischenablage, ohne das Modal zu öffnen (`copyPromptTextForCard`).
        2.  Klick auf den **Kopieren-Button im Modal (`#copy-prompt`):** Kopiert den im Modal angezeigten Text in die Zwischenablage (`copyPromptText`).
        * **Feedback:** Nach erfolgreichem Kopiervorgang erscheint kurzzeitig eine **Benachrichtigung** ("Prompt kopiert!") oben rechts auf dem Bildschirm (`showNotification`), die nach 2 Sekunden sanft wieder ausblendet. Bei einem Fehler wird dieser in der Browser-Konsole protokolliert.
* **Visuelles Feedback & Animationen:**
    * **Hover-Effekte:** Alle klickbaren Elemente (Karten, Buttons, Breadcrumb-Links) haben visuelle Hover-Effekte (Farbänderung, Schatten, Skalierung, Glühen), die dem Nutzer anzeigen, dass sie interaktiv sind.
    * **Icon-Animationen:** Die "Zeichnen"-Animation der SVG-Icons beim Hovern bietet ein ansprechendes, dynamisches Detail und verstärkt das Feedback.
    * **Transitionen:** Sanfte Übergänge (`transition`) bei Zustandsänderungen (Modal öffnen/schließen, Karten rendern) sorgen für eine flüssige und weniger abrupte Benutzererfahrung.
* **Responsivität & Mobile UX:**
    * Das **Grid-Layout** passt sich automatisch an verschiedene Bildschirmbreiten an.
    * Die **untere Navigationsleiste** bietet auf mobilen Geräten einfachen Zugriff auf Kernfunktionen (Home, Zurück) mit dem Daumen.
    * Die **Wischgeste** nach rechts zum Zurücknavigieren ist eine intuitive mobile Interaktion.
    * Die **Integration mit der Browser-History** auf mobilen Geräten ermöglicht die Nutzung der physischen/systemeigenen Zurück-Taste.

Zusammenfassend bietet die Anwendung eine durchdachte UX mit klarem Fokus auf die Kernaufgabe (Prompts finden und kopieren), verpackt in eine moderne, animierte und responsive UI. Die Navigation ist sowohl über explizite Buttons als auch über Gesten und Breadcrumbs möglich. Visuelles Feedback ist durchgängig vorhanden.